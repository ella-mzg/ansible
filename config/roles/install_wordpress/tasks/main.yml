#SPDX-License-Identifier: MIT-0
---
- name: Install Apache, PHP, MariaDB (Debian)
  apt:
    name: "{{ ubuntu_packages }}"
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"

- name: Install Apache, PHP, MariaDB (RHEL)
  yum:
    name: "{{ rocky_packages }}"
    state: present
  when: ansible_os_family == "RedHat"

- name: Start Apache with systemd if available
  service:
    name: "{{ apache_service }}"
    state: started
    enabled: true
  when: ansible_virtualization_type not in ['docker', 'lxc']

- name: Start Apache manually in container
  shell: "{{ apache_service_path }} -DFOREGROUND &"
  async: 10
  poll: 0
  when: ansible_virtualization_type in ['docker', 'lxc']

- name: Start MariaDB
  shell: "{{ mariadb_start_cmd }}"
  async: 10
  poll: 0

- name: Ensure /var/lib/mysql is initialized (RHEL)
  command: mysql_install_db --user=mysql --datadir=/var/lib/mysql
  when: ansible_facts['os_family'] == "RedHat"
  args:
    creates: /var/lib/mysql/mysql

- name: Start MariaDB safely (RHEL)
  shell: nohup mysqld_safe --datadir=/var/lib/mysql > /tmp/mariadb.log 2>&1 &
  async: 0
  poll: 0
  when: ansible_facts['os_family'] == "RedHat"

- name: Wait for MariaDB to be ready
  wait_for:
    port: 3306
    host: 127.0.0.1
    delay: 5
    timeout: 30
    state: started

- name: Install PyMySQL for Ansible MySQL modules
  package:
    name: "{{ 'python3-pymysql' if ansible_os_family == 'Debian' else 'python3-PyMySQL' }}"
    state: present

- name: Secure MariaDB installation
  include_tasks: secure-mariadb.yml

- name: Include WordPress install tasks
  include_tasks: install-wordpress.yml
